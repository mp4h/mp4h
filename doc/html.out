
;;;
;;;    Sectioning
;;;
<define-tag section><h2>%attributes</h2></define-tag>
<define-tag subsection><h3>%attributes</h3></define-tag>

;;;
;;;    Common names
;;;
<define-tag program><B>%attributes</B></define-tag>
<define-tag mp4h><program mp4h></define-tag>
<define-tag WML><program WML></define-tag>
<define-tag m4><program m4></define-tag>
<define-tag Meta-HTML><program Meta-HTML></define-tag>

<define-tag var><em>%attributes</em></define-tag>
<define-tag value><tt>%attributes</tt></define-tag>
<define-tag command><tt>%attributes</tt></define-tag>
<define-tag full-command><tt>&lt;%attributes&gt;</tt></define-tag>
<define-tag left-angle>&lt;</define-tag>
<define-tag right-angle>&gt;</define-tag>
<define-tag slash><tt>/</tt></define-tag>
<define-tag true><tt>true</tt></define-tag>
<define-tag optflag><tt>-%attributes</tt></define-tag>
<define-tag file><tt>%attributes</tt></define-tag>
<define-tag anchor><a %attributes>&nbsp;</a></define-tag>

<define-tag tag:slash><slash></define-tag>
<define-tag tag:V><tt>V</tt></define-tag>

;;;
;;;    Alias for writing URLs
;;;
<define-tag URL whitespace=delete>
<preserve name>
<preserve src>
<set-var %attributes>
<a href="<get-var src>"><tt><get-var name></tt></a>
<restore src>
<restore name>
</define-tag>

;;;
;;;    Header of the HTML document
;;;
<define-tag header>
<html>
<head>
<meta name="Author"    content="Denis Barbier">
<meta name="Generator" content="mp4h <version>">
<meta name="Created"   content="10-Feb-2000">
<set-var fileinfo[]="<get-file-properties mp4h.mp4h>">;;;
<meta name="Modified"  content="<date <get-var fileinfo[3]>>">
<title><get-var title></title>
</head>
<body>

<h1><get-var title></h1>
</define-tag>

;;;
;;;    Footer of the HTML document
;;;
<define-tag footer>;;;
</body>
</html>
</define-tag>

;;;
;;;    Description of MP4H tags
;;;
<define-tag tag:description endtag=required whitespace=delete>
<preserve complex>
<preserve verbatim>
<set-var complex=*>
<set-var verbatim=*>
<set-var %attributes>
<set-var list-attributes[]="%body">
<subst-in-var list-attributes "^\n+" singleline=true>
<subst-in-var list-attributes "\n+$" singleline=true>
<p><a name="tag-%0">&nbsp;</a></p>
<table border=2>
<tr valign=top>
<td align=center><if <get-var complex> "&nbsp;" "<a href=\"#noteattr\"><tag:slash></a>"></td>
<td align=center><if <get-var verbatim> "&nbsp;" "<a href=\"#noteattr\"><tag:V></a>"></td>
<td align=center>%0</td>
<td>
  <table border=0 cellpadding=0 cellspacing=0>
    <foreach attr list-attributes>
      <tr><td><tt><get-var attr></tt></td></tr>
    </foreach>
  </table>
</td>
</tr>
</table>
<restore verbatim>
<restore complex>
</define-tag>

<define-tag attributes:description endtag=required>
<ul>
%body
</ul>
</define-tag>

<define-tag attributes:item>
<li><attribute %0><br>
</define-tag>

;;;
;;;    Paragraphs
;;;
<define-tag para endtag=required><p>%body</p></define-tag>

;;;
;;;    Notes
;;;
<define-tag note endtag=required>;;;
<para><b><lang:note>:</b> %body</para></define-tag>

;;;
;;;    Lists
;;;
<define-tag list endtag=required>;;;
<ul>%body</ul>;;;
</define-tag>
<define-tag item><li></define-tag>

;;;
;;;    Example of MP4H code
;;;
<eol-comment "###">
<define-tag three-colon>;;;</define-tag>
<define-tag example endtag=required
            attributes=verbatim whitespace=delete>
<set-var-verbatim verb-body=%ubody>
<subst-in-var verb-body "&" "&amp;">
<subst-in-var verb-body "<" "&lt;">
<subst-in-var verb-body ">" "&gt;">
<set-var body=%body>
<subst-in-var body "&" "&amp;">
<subst-in-var body "<" "&lt;">
<subst-in-var body ">" "&gt;">
<subst-in-var body "<three-colon>[^\n]*\n[ \t]*" "" singleline=true>
<subst-in-var body "<three-colon>$" "">
<subst-in-var body "^\n*" "" singleline=true>
<table border=2 cellpadding=0 cellspacing=0 width="80%">
    <tr><th bgcolor="#ccccff"><lang:example-source></th></tr>
    <tr><td bgcolor="#ccff99" width="80%"><pre><get-var-once verb-body></pre></td></tr>
    <tr><th bgcolor="#ccccff"><lang:example-output></th></tr>
    <tr><td bgcolor="#ff99cc" width="80%"><pre><get-var-once body></pre></td></tr>
</table>
</define-tag>
<eol-comment ";;;">

;;;
;;;    Verbatim code
;;;
<define-tag code endtag=required attributes=verbatim whitespace=delete>
<set-var-verbatim verb-body=%ubody>;;;
<subst-in-var verb-body "&" "&amp;">;;;
<subst-in-var verb-body "<" "&lt;">;;;
<subst-in-var verb-body ">" "&gt;">;;;
<pre><get-var verb-body></pre>
</define-tag>

;;;
;;;    Attributes
;;;
<define-tag attribute><tt>%attributes</tt></define-tag>

;;;
;;;    HTML Comments
;;;
<define-tag html:comment endtag=required>
&lt;!--%body--&gt;
</define-tag>

<define-tag option-list endtag=required>
<table cellspacing=2 border=0>
%body
</table>
</define-tag>

<define-tag option endtag=required>
<tr valign=top><td>%attributes</td><td>%body</td></tr>
</define-tag>

<define-tag optmand><tt>%attributes</tt></define-tag>
<define-tag optopt><tt>[%attributes]</tt></define-tag>

;;;
;;;   Macros to draw a numbered list, with refs.
;;;
<define-tag step-by-step endtag=required whitespace=delete>
  <set-var __step=>
  <define-tag step-ref></define-tag>
  <define-tag step>
    <array-append %%0 __step>
  </define-tag>
  <set-var dummy="%body">
  <define-tag step><li></define-tag>
  <define-tag step-ref>
  <add 1 <array-member %%0 __step>>
  </define-tag>
  <ol>
  %body
  </ol>
</define-tag>
