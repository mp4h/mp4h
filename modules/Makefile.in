##
##  Makefile -- mp4h Makefile for modules
##

@SET_MAKE@
SHELL = /bin/sh

top_srcdir      = @top_srcdir@
top_builddir    = @top_srcdir@
srcdir          = @srcdir@
prefix          = @prefix@

VPATH           = @srcdir@

INITVARS = \
     do_module_njs=@do_module_njs@ \
     do_module_mozjs=@do_module_mozjs@

# ------------------------------------------------
#   DEFINITIONS
# ------------------------------------------------

SUBDIRS         = njs mozjs
SDP             = modules/

SHELL           = /bin/sh
RM              = rm -f

# ------------------------------------------------
#   THE DEFAULT TARGETS
# ------------------------------------------------

all: all-recursive

# ------------------------------------------------
#   CLEANUP
# ------------------------------------------------

clean: clean-recursive

distclean: clean distclean-recursive
	-$(RM) Makefile

# ------------------------------------------------
#   RECURSIVE CALLS
# ------------------------------------------------

RECURS_TARGET = \
   echo "===> $(SDP)$$dir ($$target)"; \
   (cd $$dir && $(MAKE) SDP="$(SDP)$$dir/" prefix=$(prefix) $$target) \
   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
   echo "<=== $(SDP)$$dir"

RECURS_TARGET_NOBREAK = \
   echo "===> $(SDP)$$dir ($$target)"; \
   (cd $$dir && $(MAKE) SDP="$(SDP)$$dir/" prefix=$(prefix) $$target); \
   echo "<=== $(SDP)$$dir"

#   Some GNU components (especially libltdl) require mkinstalldirs
#   to do nothing with it, so it is discarded
all-recursive install-recursive:
	-@set -e; \
	set dummy $(MAKEFLAGS); amf=$$2; \
	$(INITVARS); \
	target=`echo $@ | sed s/-recursive//`; \
	for dir in $(SUBDIRS); do \
	    eval "do_module=\"`echo '$$'do_module_$$dir`\""; \
	    if test ".$$do_module" = .1; then \
	        $(RECURS_TARGET); \
	    else :; \
	    fi; \
	done && test -z "$$fail"

clean-recursive distclean-recursive:
	@target=`echo $@ | sed s/-recursive//`; \
	for dir in $(SUBDIRS); do \
	    if [ -f $$dir/Makefile ]; then \
	        $(RECURS_TARGET_NOBREAK); \
	    else :; \
	    fi; \
	done

##EOF##
